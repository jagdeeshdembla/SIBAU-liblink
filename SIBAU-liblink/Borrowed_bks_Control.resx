<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>